(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{280:function(t,e,a){t.exports=a.p+"assets/img/bench_test_jst.69e9f734.png"},341:function(t,e,a){t.exports=a.p+"assets/img/bench_test_molex.7b3ab4e3.png"},678:function(t,e,a){t.exports=a.p+"assets/img/y_mon.4165c8ed.png"},679:function(t,e,a){t.exports=a.p+"assets/img/yukon_monitor.7e590ca3.png"},805:function(t,e,a){"use strict";a.r(e);var r=a(14),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_3-cyphal-interface"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-cyphal-interface"}},[t._v("#")]),t._v(" 3. Cyphal interface")]),t._v(" "),e("p",[t._v("This page is about Cyphal related details such as interface, supported features, registers, configuration and usage examples and software versions. For general information please refer "),e("RouterLink",{attrs:{to:"/guide/ui_leds/"}},[t._v("1. General")]),t._v(", for hardware-related details, including the connection example scheme, please refer to the Hardware page: "),e("RouterLink",{attrs:{to:"/guide/ui_leds/hardware.html"}},[t._v("Hardware")]),t._v(".")],1),t._v(" "),e("h2",{attrs:{id:"_3-1-cyphal-interface"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-cyphal-interface"}},[t._v("#")]),t._v(" 3.1. Cyphal interface")]),t._v(" "),e("p",[t._v("This node interacts with the following data types:")]),t._v(" "),e("p",[e("strong",[t._v("Common for any node")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("№")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Message")]),t._v(" "),e("th",[t._v("Rate")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("pub")]),t._v(" "),e("td",[e("a",{attrs:{href:"https://github.com/OpenCyphal/public_regulated_data_types/blob/master/uavcan/node/7509.Heartbeat.1.0.dsdl",target:"_blank",rel:"noopener noreferrer"}},[t._v("uavcan.node.Heartbeat"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("1 Hz")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("pub")]),t._v(" "),e("td",[e("a",{attrs:{href:"https://github.com/OpenCyphal/public_regulated_data_types/blob/master/uavcan/node/port/7510.List.0.1.dsdl",target:"_blank",rel:"noopener noreferrer"}},[t._v("uavcan.node.port.List"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("0.2 Hz")])]),t._v(" "),e("tr",[e("td",[t._v("3")]),t._v(" "),e("td",[t._v("RPC-service")]),t._v(" "),e("td",[e("a",{attrs:{href:"https://github.com/OpenCyphal/public_regulated_data_types/blob/master/uavcan/node/430.GetInfo.1.0.dsdl",target:"_blank",rel:"noopener noreferrer"}},[t._v("uavcan.node.GetInfo"),e("OutboundLink")],1)]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("RPC-service")]),t._v(" "),e("td",[e("a",{attrs:{href:"https://github.com/OpenCyphal/public_regulated_data_types/blob/master/uavcan/node/435.ExecuteCommand.1.0.dsdl",target:"_blank",rel:"noopener noreferrer"}},[t._v("uavcan.node.ExecuteCommand *"),e("OutboundLink")],1)]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("5")]),t._v(" "),e("td",[t._v("RPC-service")]),t._v(" "),e("td",[e("a",{attrs:{href:"https://github.com/OpenCyphal/public_regulated_data_types/blob/master/uavcan/register/385.List.1.0.dsdl",target:"_blank",rel:"noopener noreferrer"}},[t._v("uavcan.register.List"),e("OutboundLink")],1)]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("6")]),t._v(" "),e("td",[t._v("RPC-service")]),t._v(" "),e("td",[e("a",{attrs:{href:"https://github.com/OpenCyphal/public_regulated_data_types/blob/master/uavcan/register/384.Access.1.0.dsdl",target:"_blank",rel:"noopener noreferrer"}},[t._v("uavcan.register.Access"),e("OutboundLink")],1)]),t._v(" "),e("td")])])]),t._v(" "),e("p",[t._v("Here "),e("code",[t._v("ExecuteCommand")]),t._v(" supports "),e("code",[t._v("COMMAND_RESTART=65535")]),t._v(", "),e("code",[t._v("COMMAND_FACTORY_RESET=65532")]),t._v(" and "),e("code",[t._v("COMMAND_STORE_PERSISTENT_STATES=65530")]),t._v(".")]),t._v(" "),e("p",[e("strong",[t._v("Circuit status service")])]),t._v(" "),e("p",[t._v("Like any other RaccoonLab node, this node also supports the "),e("code",[t._v("Circuit status service")]),t._v(". It uses the following subjects:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("№")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Message")]),t._v(" "),e("th",[t._v("Topic name")]),t._v(" "),e("th",[t._v("Rate")]),t._v(" "),e("th",[t._v("Comment")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("pub")]),t._v(" "),e("td",[e("a",{attrs:{href:""}},[t._v("uavcan.si.sample.voltage.Scalar.1.0")])]),t._v(" "),e("td",[t._v("crct.5v")]),t._v(" "),e("td",[t._v("2 Hz")]),t._v(" "),e("td",[t._v("Not provided in opensource firmware")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("pub")]),t._v(" "),e("td",[e("a",{attrs:{href:""}},[t._v("uavcan.si.sample.voltage.Scalar.1.0")])]),t._v(" "),e("td",[t._v("crct.vin")]),t._v(" "),e("td",[t._v("2 Hz")]),t._v(" "),e("td",[t._v("Not provided in opensource firmware")])]),t._v(" "),e("tr",[e("td",[t._v("3")]),t._v(" "),e("td",[t._v("pub")]),t._v(" "),e("td",[e("a",{attrs:{href:""}},[t._v("uavcan.si.sample.temperature.Scalar.1.0")])]),t._v(" "),e("td",[t._v("crct.dev_temp")]),t._v(" "),e("td",[t._v("2 Hz")]),t._v(" "),e("td")])])]),t._v(" "),e("p",[e("strong",[t._v("LERGB LED service")])]),t._v(" "),e("p",[t._v("It supports UDRAL interfaces. You should use only one interface at the same time.")]),t._v(" "),e("p",[t._v("The following interface is based on UDRAL:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("№")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Message")]),t._v(" "),e("th",[t._v("Topic name")]),t._v(" "),e("th",[t._v("Rate")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("sub")]),t._v(" "),e("td",[e("a",{attrs:{href:"https://github.com/OpenCyphal/public_regulated_data_types/blob/master/reg/udral/physics/optics/HighColor.0.1.dsdl",target:"_blank",rel:"noopener noreferrer"}},[t._v("HighColor.0.1"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("lights")]),t._v(" "),e("td",[t._v("set up by user")])])])]),t._v(" "),e("h2",{attrs:{id:"_3-2-cyphal-registers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-cyphal-registers"}},[t._v("#")]),t._v(" 3.2. Cyphal Registers")]),t._v(" "),e("p",[t._v("Beside the standard "),e("code",[t._v("uavcan.*.<subject>.id")]),t._v(" and "),e("code",[t._v("uavcan.*.<subject>.type")]),t._v(" registers related to\neach subject, the node also have the following registers:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("№")]),t._v(" "),e("th",[t._v("Register")]),t._v(" "),e("th",[t._v("Note")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("uavcan.node.id")]),t._v(" "),e("td",[t._v("Reboot required")]),t._v(" "),e("td",[t._v("Node ID")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("uavcan.node.name")]),t._v(" "),e("td",[t._v("Reboot required")]),t._v(" "),e("td",[t._v("Node custom name")])])])]),t._v(" "),e("p",[t._v("You can get the list of registers, read and write them using "),e("a",{attrs:{href:"https://github.com/OpenCyphal/yakut",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yakut"),e("OutboundLink")],1),t._v(" cli or "),e("a",{attrs:{href:"https://github.com/OpenCyphal-Garage/yukon",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yukon"),e("OutboundLink")],1),t._v(" gui.")]),t._v(" "),e("h2",{attrs:{id:"_3-3-getting-started-bench-test"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-getting-started-bench-test"}},[t._v("#")]),t._v(" 3.3. Getting started (bench test)")]),t._v(" "),e("p",[t._v("Before mounting on a real vehicle, especially when using the node for the first time, it is recommended to test the node and perform configuration on a bench using "),e("a",{attrs:{href:"https://github.com/OpenCyphal/yakut",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yakut"),e("OutboundLink")],1),t._v(" cli or "),e("a",{attrs:{href:"https://github.com/OpenCyphal-Garage/yukon",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yukon"),e("OutboundLink")],1),t._v(" gui.")]),t._v(" "),e("p",[t._v("This section provides a step-by-step checklist to test most features and configure essential parameters.")]),t._v(" "),e("h3",{attrs:{id:"step-1-connect-the-device"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#step-1-connect-the-device"}},[t._v("#")]),t._v(" "),e("strong",[t._v("Step 1. Connect the Device")])]),t._v(" "),e("p",[t._v("The simplest connection scheme just for bench testing and configuration is shown below.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(280),alt:"bench_test_jst",title:"bench_test_jst"}})]),t._v(" "),e("p",[t._v("However, the node may consume a lot of power when all 3 colors (red, green, blue) are enabled with the hightness brigtness, so it is recommended to use the following connection scheme where you power a node from an external source (up to 30V) to a Molex (6-pin) connector and connect the sniffer to the JST-GH 4-pin connector. The connection scheme is:")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("Remove the 5V (red) line from the JST wire on the connection scheme below!")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(341),alt:"bench_test_molex",title:"bench_test_molex"}})]),t._v(" "),e("blockquote",[e("p",[t._v("In progress: new version of the software will have automatic detection of the connection type. If you power from JST (5V), it will automatically reduce the brightness to reduce the power consumption, so it can be easily and safely used with any connection type.")])]),t._v(" "),e("h3",{attrs:{id:"step-2-configure-the-environment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#step-2-configure-the-environment"}},[t._v("#")]),t._v(" "),e("strong",[t._v("Step 2. Configure the Environment")])]),t._v(" "),e("p",[t._v("For details about how to configure the environment, it is recommended to iether refer to the "),e("a",{attrs:{href:"https://github.com/OpenCyphal/yukon",target:"_blank",rel:"noopener noreferrer"}},[t._v("yukon"),e("OutboundLink")],1),t._v(" and "),e("a",{attrs:{href:"https://github.com/OpenCyphal/yakut",target:"_blank",rel:"noopener noreferrer"}},[t._v("yakut"),e("OutboundLink")],1),t._v(" instructions or to refer to our "),e("RouterLink",{attrs:{to:"/guide/programmer_sniffer/sniffer.html"}},[t._v("Cyphal usage instruction")]),t._v(".")],1),t._v(" "),e("h3",{attrs:{id:"step-3-monitor-the-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#step-3-monitor-the-node"}},[t._v("#")]),t._v(" Step 3: Monitor the Node")]),t._v(" "),e("p",[t._v("Assuming you have correctly connected the Cyphal node to a CAN sniffer and prepared the environment, you can now monitor node's status.")]),t._v(" "),e("h3",{attrs:{id:"using-yakut-cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-yakut-cli"}},[t._v("#")]),t._v(" Using Yakut CLI")]),t._v(" "),e("p",[t._v("Run the following command:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("yakut monitor\n")])])]),e("p",[t._v("You should see the output similar to the one shown below:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(678),alt:"Yakut Monitor",title:"Yakut Monitor"}})]),t._v(" "),e("h3",{attrs:{id:"using-yukon-gui"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-yukon-gui"}},[t._v("#")]),t._v(" Using Yukon GUI")]),t._v(" "),e("p",[t._v("Alternatively, you can use the Yukon GUI to monitor the node.\nSimply launch the Yukon GUI and navigate to the Monitor window.\nAn example of this window is presented below:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(679),alt:"Yukon Monitor",title:"Yukon Monitor"}})]),t._v(" "),e("p",[t._v("When monitoring, look for the LIGHTS node on the bus.\nBy default, its name should be "),e("code",[t._v("co.raccoonlab.lights")]),t._v(".")]),t._v(" "),e("p",[e("strong",[t._v("Note")]),t._v(": Remember the node ID (number) of the GNSS node. While this guide uses "),e("code",[t._v("50")]),t._v(" as an example in subsequent steps, you should use the node ID that corresponds to your setup.")]),t._v(" "),e("h3",{attrs:{id:"step-4-configure-and-read-the-data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#step-4-configure-and-read-the-data"}},[t._v("#")]),t._v(" Step 4: Configure and Read the Data")]),t._v(" "),e("h3",{attrs:{id:"_1-register-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-register-configuration"}},[t._v("#")]),t._v(" 1. Register Configuration")]),t._v(" "),e("h3",{attrs:{id:"_2-rgb-led-color-send"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-rgb-led-color-send"}},[t._v("#")]),t._v(" 2. RGB LED Color send")]),t._v(" "),e("h3",{attrs:{id:"_3-circuit-status-data-retrieval"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-circuit-status-data-retrieval"}},[t._v("#")]),t._v(" 3. Circuit Status Data Retrieval")]),t._v(" "),e("p",[t._v("Configure the ports:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("y r "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" uavcan.pub.crct.5v.id "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4006")]),t._v("\ny r "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" uavcan.pub.crct.temp.id "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4007")]),t._v("\ny r "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" uavcan.pub.crct.vin.id "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4008")]),t._v("\n")])])]),e("p",[t._v("Listen to the data:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("y s "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4006")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\ny s "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4007")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\ny s "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4008")]),t._v("\n")])])]),e("p",[e("strong",[t._v("Outputs Examples")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("  timestamp: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  volt: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.10432243347168")]),t._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("  timestamp: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  kelvin: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("298.0")]),t._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("  timestamp: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  volt: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.712674140930176")]),t._v("\n")])])]),e("h3",{attrs:{id:"step-5-try-node-control-commands"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#step-5-try-node-control-commands"}},[t._v("#")]),t._v(" "),e("strong",[t._v("Step 5: Try Node Control Commands")])]),t._v(" "),e("p",[t._v("Issue a restart command:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("y cmd "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" restart\n")])])]),e("p",[e("strong",[t._v("Note")]),t._v(": Receiving "),e("code",[t._v("Timed out while waiting for response from node 50")]),t._v(" is expected, as the node restarts immediately.")]),t._v(" "),e("p",[t._v("Reset to defaults (Attention: registers configuration would be reset):")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("y cmd "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" factory\n")])])]),e("h2",{attrs:{id:"_3-4-ardupilot-integration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-ardupilot-integration"}},[t._v("#")]),t._v(" 3.4. Ardupilot integration")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("Ardupilot doesn't officially support Cyphal.\nIt is expected to use "),e("a",{attrs:{href:"https://github.com/PonomarevDA/ardupilot/tree/cyphal",target:"_blank",rel:"noopener noreferrer"}},[t._v("the custom cyphal branch of ardupilot"),e("OutboundLink")],1),t._v(".")])]),t._v(" "),e("p",[e("strong",[t._v("1. RGB LED configuration")])]),t._v(" "),e("p",[e("strong",[t._v("2. Verification")])]),t._v(" "),e("h2",{attrs:{id:"_3-5-px4-integration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-px4-integration"}},[t._v("#")]),t._v(" 3.5. PX4 integration")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v('PX4 support is a "work in progress". It doesn\'t officilly support GNSS, magnetomer or barometer. It is expected to use '),e("a",{attrs:{href:"https://github.com/PonomarevDA/PX4-Autopilot/tree/pr-cyphal",target:"_blank",rel:"noopener noreferrer"}},[t._v("the branch with few additional features"),e("OutboundLink")],1),t._v(".")])]),t._v(" "),e("p",[e("strong",[t._v("1. RGB LED configuration")])]),t._v(" "),e("h2",{attrs:{id:"_3-6-software-versions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-software-versions"}},[t._v("#")]),t._v(" 3.6. Software versions")]),t._v(" "),e("p",[t._v("UAV Lights Cyphal software is open source. Check "),e("a",{attrs:{href:"https://github.com/RaccoonlabDev/uav_lights_node",target:"_blank",rel:"noopener noreferrer"}},[t._v("RaccoonlabDev/uav_lights_node"),e("OutboundLink")],1),t._v(" if you want to customize it.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Version")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("a",{attrs:{href:"https://github.com/RaccoonlabDev/uav_lights_node/releases/tag/v0.2.3",target:"_blank",rel:"noopener noreferrer"}},[t._v("v0.2.3"),e("OutboundLink")],1),t._v(" "),e("br"),t._v(" (Dec 27, 2023)")]),t._v(" "),e("td",[t._v("- Add external RGB LEDs init sequence "),e("br"),t._v(" - Add default external RGB LEDs color "),e("br"),t._v(" - Add support of UAV-Lights v2.2 (it is about new internal RGB LED)")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://github.com/RaccoonlabDev/uav_lights_node/releases/tag/v0.2.2",target:"_blank",rel:"noopener noreferrer"}},[t._v("v0.2.2"),e("OutboundLink")],1),t._v(" "),e("br"),t._v(" (Dec 27, 2023)")]),t._v(" "),e("td",[t._v("First Cyphal release for UAV Lights node v2.1")])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);