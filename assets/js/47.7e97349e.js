(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{298:function(e,t,a){e.exports=a.p+"assets/img/bench_test.ca466645.png"},388:function(e,t,a){e.exports=a.p+"assets/img/airspeed_params.1bd30b48.png"},389:function(e,t,a){e.exports=a.p+"assets/img/airspeed_message.a32985a1.png"},390:function(e,t,a){e.exports=a.p+"assets/img/airspeed_plot.ec481fda.png"},391:function(e,t,a){e.exports=a.p+"assets/img/airspeed_qgc.791dc166.png"},392:function(e,t,a){e.exports=a.p+"assets/img/px4_log_airspeed_2023_12_19.0573730c.png"},725:function(e,t,a){"use strict";a.r(t);var o=a(14),r=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_4-dronecan-interface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-dronecan-interface"}},[e._v("#")]),e._v(" 4. DroneCAN interface")]),e._v(" "),t("p",[e._v("This page is about DroneCAN related details such as interface, supported features, parameters, configuration and usage examples and software versions. For general information please refer to the "),t("RouterLink",{attrs:{to:"/guide/airspeed/"}},[e._v("1. General")]),e._v(" page, for hardware related details including wiring examples please refer to the "),t("RouterLink",{attrs:{to:"/guide/airspeed/hardware.html"}},[e._v("2. Hardware")]),e._v(" page.")],1),e._v(" "),t("p",[e._v("This section is related to the latest released version of the software.")]),e._v(" "),t("h2",{attrs:{id:"_4-1-dronecan-interface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-dronecan-interface"}},[e._v("#")]),e._v(" 4.1. DroneCAN interface")]),e._v(" "),t("p",[e._v("This node interacts with the following messages:")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("№")]),e._v(" "),t("th",[e._v("type")]),e._v(" "),t("th",[e._v("message")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("1")]),e._v(" "),t("td",[e._v("publisher")]),e._v(" "),t("td",[t("a",{attrs:{href:"https://dronecan.github.io/Specification/7._List_of_standard_data_types/#rawairdata",target:"_blank",rel:"noopener noreferrer"}},[e._v("uavcan.equipment.air_data.RawAirData"),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("2")]),e._v(" "),t("td",[e._v("publisher")]),e._v(" "),t("td",[t("a",{attrs:{href:"https://dronecan.github.io/Specification/7._List_of_standard_data_types/#circuitstatus",target:"_blank",rel:"noopener noreferrer"}},[e._v("uavcan.equipment.power.CircuitStatus"),t("OutboundLink")],1)])])])]),e._v(" "),t("p",[e._v("Besides required and highly recommended functions such as "),t("a",{attrs:{href:"https://dronecan.github.io/Specification/7._List_of_standard_data_types/#nodestatus",target:"_blank",rel:"noopener noreferrer"}},[e._v("NodeStatus"),t("OutboundLink")],1),e._v(" and "),t("a",{attrs:{href:"https://dronecan.github.io/Specification/7._List_of_standard_data_types/#getnodeinfo",target:"_blank",rel:"noopener noreferrer"}},[e._v("GetNodeInfo"),t("OutboundLink")],1),e._v(" this node also supports the following application-level functions:")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("№")]),e._v(" "),t("th",[e._v("type")]),e._v(" "),t("th",[e._v("message")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("1")]),e._v(" "),t("td",[e._v("RPC-service")]),e._v(" "),t("td",[t("a",{attrs:{href:"https://dronecan.github.io/Specification/7._List_of_standard_data_types/#uavcanprotocolparam",target:"_blank",rel:"noopener noreferrer"}},[e._v("uavcan.protocol.param"),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("2")]),e._v(" "),t("td",[e._v("RPC-service")]),e._v(" "),t("td",[t("a",{attrs:{href:"https://dronecan.github.io/Specification/7._List_of_standard_data_types/#restartnode",target:"_blank",rel:"noopener noreferrer"}},[e._v("uavcan.protocol.RestartNode"),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("3")]),e._v(" "),t("td",[e._v("RPC-service")]),e._v(" "),t("td",[t("a",{attrs:{href:"https://dronecan.github.io/Specification/7._List_of_standard_data_types/#gettransportstats",target:"_blank",rel:"noopener noreferrer"}},[e._v("uavcan.protocol.GetTransportStats"),t("OutboundLink")],1)])])])]),e._v(" "),t("h2",{attrs:{id:"_4-2-dronecan-parameters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-dronecan-parameters"}},[e._v("#")]),e._v(" 4.2. DroneCAN Parameters")]),e._v(" "),t("p",[e._v("The list of parameters is shown in the picture below:")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("№")]),e._v(" "),t("th",[e._v("Param name")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("0")]),e._v(" "),t("td",[e._v("ID")]),e._v(" "),t("td",[e._v("You should manually choose the node ID. On the bus, a few nodes with the same ID should not exist.")])]),e._v(" "),t("tr",[t("td",[e._v("1")]),e._v(" "),t("td",[e._v("airspeed_enable")]),e._v(" "),t("td",[e._v("0 - disable data publication, 1 - enable")])]),e._v(" "),t("tr",[t("td",[e._v("2")]),e._v(" "),t("td",[e._v("airspeed_pub_period")]),e._v(" "),t("td",[e._v("Period of message publication")])]),e._v(" "),t("tr",[t("td",[e._v("3")]),e._v(" "),t("td",[e._v("airspeed_measurement_period")]),e._v(" "),t("td",[e._v("Period of data measurement")])]),e._v(" "),t("tr",[t("td",[e._v("4")]),e._v(" "),t("td",[e._v("airspeed_calibration_offset")]),e._v(" "),t("td",[e._v("The published differential pressure = measured pressure + this offset")])]),e._v(" "),t("tr",[t("td",[e._v("5")]),e._v(" "),t("td",[e._v("airspeed_calibration_request")]),e._v(" "),t("td",[e._v("Automatic calibration request. See this feature description for details.")])]),e._v(" "),t("tr",[t("td",[e._v("6")]),e._v(" "),t("td",[e._v("enable_5v_check")]),e._v(" "),t("td",[e._v("Set ERROR status if 5V voltage is out of range 4.5 - 5.5 V")])]),e._v(" "),t("tr",[t("td",[e._v("7")]),e._v(" "),t("td",[e._v("enable_vin_check")]),e._v(" "),t("td",[e._v("Set ERROR status if Vin voltage is less than 4.5 V")])]),e._v(" "),t("tr",[t("td",[e._v("8")]),e._v(" "),t("td",[e._v("name")]),e._v(" "),t("td",[e._v("If specified value != 0, use custom node name. There are no custom names yet, but it might be extended if you need it.")])])])]),e._v(" "),t("h2",{attrs:{id:"_4-3-getting-started-bench-test"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-getting-started-bench-test"}},[e._v("#")]),e._v(" 4.3. Getting started (bench test)")]),e._v(" "),t("p",[e._v("Before mounting on a real vehicle, especially when using the node for the first time, it is recommended to test the node and perform configuration on a bench using "),t("a",{attrs:{href:"https://github.com/dronecan/gui_tool",target:"_blank",rel:"noopener noreferrer"}},[e._v("gui_tool"),t("OutboundLink")],1),e._v(". This utility allows to easily use the full functionality of the node.")]),e._v(" "),t("p",[e._v("The following checklist allows you to test most of the features and configure the most important parameters.")]),e._v(" "),t("p",[t("strong",[e._v("Step 1. Connect the node properly to a sniffer. Initially, when there is no command, the node goes into STANDBY mode and LED should blink with blue color")])]),e._v(" "),t("p",[e._v("The simplest connection scheme just for bench testing and configuration is shown below.")]),e._v(" "),t("p",[t("img",{attrs:{src:a(298),alt:"bench_test_standby",title:"bench_test_standby"}})]),e._v(" "),t("p",[e._v("When you mount the device to your CAN-network you may want alternative connection of the sensor. Check hardware docs for other examples.")]),e._v(" "),t("p",[t("strong",[e._v("Step 2. Open gui_tool and set the local node ID. The node should send data and respond to GetNodeInfo")])]),e._v(" "),t("p",[e._v("Open "),t("code",[e._v("gui_tool")]),e._v(" and check that the node publishes some data like "),t("code",[e._v("NodeStatus")]),e._v(" and "),t("code",[e._v("GetNodeInfo")]),e._v(". You can quickly press 2 times on the node in "),t("code",[e._v("Online nodes")]),e._v(" list. You should be able to see additional information such as node name, software version, UID, etc.")]),e._v(" "),t("p",[t("img",{attrs:{src:a(388),alt:"scheme",title:"scheme"}})]),e._v(" "),t("p",[e._v("The node should respond with the software version that suits you (probably it should be the latest available stable version).")]),e._v(" "),t("blockquote",[t("p",[e._v("If your node doesn't send "),t("code",[e._v("GetNodeInfo")]),e._v(" it probably means that your gui_tool is still in anonymous mode. Apply local node ID.")])]),e._v(" "),t("p",[t("strong",[e._v("Step 3. Configure the node ID, then reboot it. ID value should be updated.")])]),e._v(" "),t("p",[e._v("Select the node ID that fits your CAN-network without ID-collision.")]),e._v(" "),t("p",[t("strong",[e._v("Step 4. Open subscriber panel. The node should publish RawAirData.")])]),e._v(" "),t("p",[e._v("Below you can see an example of a message when a device is on a table and there is no wind.")]),e._v(" "),t("p",[t("img",{attrs:{src:a(389),alt:"airspeed_message",title:"airspeed_message"}})]),e._v(" "),t("p",[e._v("You can create a real-time plot with raw sensor data. Here it is:")]),e._v(" "),t("p",[t("img",{attrs:{src:a(390),alt:"airspeed_plot",title:"airspeed_plot"}})]),e._v(" "),t("p",[e._v("As you can see on the plot, the measurement has an offset. Here it is ~76 Pascal. Although this offset may lead to wrong airspeed estimation on the autopilot level, there are few ways how can you take it into account. See "),t("a",{attrs:{href:"#52-calibration"}},[e._v("5.2. Calibration")]),e._v(" for details.")]),e._v(" "),t("p",[t("strong",[e._v("Step 4. Calibrate the node using gui_tool. Published differential pressure should be close to zero.")])]),e._v(" "),t("blockquote",[t("p",[e._v("This step is optional if you are going to calibrate the sensor on the autopilot side.")])]),e._v(" "),t("p",[e._v("Calibration might be started using "),t("code",[e._v("gui_tool")]),e._v(". The alrorithm is following:")]),e._v(" "),t("ol",[t("li",[e._v("Open a "),t("code",[e._v("Node Properties")]),e._v(" window (the same as on picrure in "),t("a",{attrs:{href:"#6-parameters"}},[e._v("6. Parameters")]),e._v(")")]),e._v(" "),t("li",[e._v("Set "),t("code",[e._v("airspeed_calibration_request")]),e._v(" parameter to 1")]),e._v(" "),t("li",[e._v("The node will go ibto "),t("code",[e._v("INITIALIZATION")]),e._v(" mode for 10 second. You will see ib on main window")]),e._v(" "),t("li",[e._v("When a node go into "),t("code",[e._v("OPERATION")]),e._v(" mode, you need to press "),t("code",[e._v("Store all")]),e._v(" button to save a calibration parameter.")]),e._v(" "),t("li",[e._v("(optional) Reboot the device to be sure that the calibration offset is saved successfully.")])]),e._v(" "),t("p",[e._v("The calibration is done and device is ready for usage.")]),e._v(" "),t("h2",{attrs:{id:"_4-4-px4-integration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-px4-integration"}},[e._v("#")]),e._v(" 4.4. PX4 integration")]),e._v(" "),t("p",[e._v("The node has been tested multiple times on the VTOL application with autopilot based on PX4 (v1.12 with small fix and v1.13).")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("PX4 v1.12.* usage issue!!!\nPX4 versions 1.12.* have a bug with wrong filter settings for DroneCAN differential pressure sensor reported "),t("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/issues/18151",target:"_blank",rel:"noopener noreferrer"}},[e._v("in this issue"),t("OutboundLink")],1),e._v(".\nIt is recommended to use a newer 1.13 version where this bug was fixed.")])]),e._v(" "),t("p",[t("strong",[e._v("4.4.1. PX4 Parameters")])]),e._v(" "),t("p",[e._v("Normally, to use it with your PX4-based Autopilot you need to set up the following parameters:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("UAVCAN_ENABLE")]),e._v(",")]),e._v(" "),t("li",[t("code",[e._v("UAVCAN_SUB_DPRES")]),e._v(" (since 1.13.1),")]),e._v(" "),t("li",[t("code",[e._v("ASPD_DO_CHECKS")]),e._v(" (recommended, but is not necessary),")]),e._v(" "),t("li",[t("code",[e._v("SENS_DPRES_OFF")]),e._v(" (this value is added to every differential pressure measurement before airspeed estimation; PX4 calibration process automatically write to this parameter)")])]),e._v(" "),t("p",[t("strong",[e._v("4.4.2. QGC node monitoring")])]),e._v(" "),t("p",[e._v("Typically, during the first usage, it is recommended to check this node using "),t("code",[e._v("MAVLink console")]),e._v(" by typing few simple commands:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("uavcan status")]),e._v(" allows you to see the list of online nodes. You should be able to see this node.")]),e._v(" "),t("li",[t("code",[e._v("listener differential_pressure")]),e._v(" returns the raw value of the sensor")]),e._v(" "),t("li",[t("code",[e._v("uorb top differential_pressure")]),e._v(" returns the publish rate of the sensor")]),e._v(" "),t("li",[t("code",[e._v("listener airspeed")]),e._v(" will output the airspeed estimated by this node")])]),e._v(" "),t("p",[t("strong",[e._v("4.4.3. Calibration using QGC")])]),e._v(" "),t("p",[e._v("As in said in "),t("a",{attrs:{href:"#52-calibration"}},[e._v("5.2. Calibration")]),e._v(" there are 2 ways of calibration process. Here is described how to perform calibration of this node using QGC.")]),e._v(" "),t("p",[e._v("To perform calibration on the sensor side from QGC you should type:")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("uavcan param list 74")]),e._v(" - check is calibration feature is supported")]),e._v(" "),t("li",[t("code",[e._v("uavcan param set 74 airspeed_calib_request 1")]),e._v(" to start calibration")]),e._v(" "),t("li",[e._v("wait 10+ seconds")]),e._v(" "),t("li",[t("code",[e._v("uavcan param save 74")]),e._v(" - to save new calibration parameters.")])]),e._v(" "),t("p",[t("img",{attrs:{src:a(391),alt:"airspeed_qgc",title:"airspeed_qgc"}})]),e._v(" "),t("p",[e._v("Here 74 is our node id. It has a calibration offset -69.")]),e._v(" "),t("p",[e._v("After that, you need to manually write non zero value to "),t("code",[e._v("SENS_DPRES_OFF")]),e._v(" parameter.")]),e._v(" "),t("p",[t("strong",[e._v("4.4.4. Flight log example")])]),e._v(" "),t("p",[e._v("Here you may see the screenshot from one of the flight logs. This is a flight in FW mode for 2 hours with average speed 25 m/sec and wind ~7 m/sec.")]),e._v(" "),t("p",[t("img",{attrs:{src:a(392),alt:"px4_log_airspeed_2021_11_12"}})]),e._v(" "),t("h2",{attrs:{id:"_4-5-software-versions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-software-versions"}},[e._v("#")]),e._v(" 4.5. Software versions")]),e._v(" "),t("p",[e._v("History of all releases and changes related to the node:")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Version")]),e._v(" "),t("th",[e._v("Date")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/RaccoonlabDev/docs/releases/tag/v0.4.5",target:"_blank",rel:"noopener noreferrer"}},[e._v("v0.4.5_65aa32d"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Feb 17, 2022")]),e._v(" "),t("td",[e._v("Add circuit status, filter and automatic calibration")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/RaccoonlabDev/docs/releases/tag/v0.3.0-alpha",target:"_blank",rel:"noopener noreferrer"}},[e._v("v0.3.0_04866c1"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Apr 05, 2021")]),e._v(" "),t("td",[e._v("First public release")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);