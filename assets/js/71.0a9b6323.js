(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{279:function(e,t,r){e.exports=r.p+"assets/img/connection-prog.1955457f.png"},520:function(e,t,r){e.exports=r.p+"assets/img/cube-prog-1.5311020e.png"},521:function(e,t,r){e.exports=r.p+"assets/img/cube-prog-2.65547946.png"},522:function(e,t,r){e.exports=r.p+"assets/img/cube-prog-3.c3795959.png"},766:function(e,t,r){"use strict";r.r(t);var o=r(14),a=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"update-the-firmware-with-rl-programmer-on-windows-with-stm3cubeprogrammer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#update-the-firmware-with-rl-programmer-on-windows-with-stm3cubeprogrammer"}},[e._v("#")]),e._v(" Update the firmware with RL-programmer on Windows with STM3CubeProgrammer")]),e._v(" "),t("h3",{attrs:{id:"step-1-download-firmware"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-1-download-firmware"}},[e._v("#")]),e._v(" Step 1. Download firmware")]),e._v(" "),t("p",[e._v("Download the latest firmware from "),t("RouterLink",{attrs:{to:"/guide/intro/firmware_upload.html"}},[e._v("Update the firmware")]),e._v(" page.")],1),e._v(" "),t("h3",{attrs:{id:"step-2-1-install-software"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-2-1-install-software"}},[e._v("#")]),e._v(" Step 2.1. Install software")]),e._v(" "),t("p",[e._v("Install "),t("a",{attrs:{href:"https://www.st.com/en/development-tools/stm32cubeprog.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("STM32CubeProgrammer"),t("OutboundLink")],1),e._v(" to the default directory.")]),e._v(" "),t("blockquote",[t("p",[e._v("This tutorial is based on stm32cubeprg-win64-v2.15.")])]),e._v(" "),t("h3",{attrs:{id:"step-2-2-connect-the-programmer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-2-2-connect-the-programmer"}},[e._v("#")]),e._v(" Step 2.2. Connect the programmer")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("Be sure that your SWD pins on the node and the needle sides are connected correctly (3.3 to 3.3, GND to GND).")])]),e._v(" "),t("p",[e._v("Prerequisites are:")]),e._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/guide/programmer_sniffer/"}},[e._v("RL Programmer-Sniffer")]),e._v(",")],1),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/RaccoonLabHardware/SWD-NEEDLE",target:"_blank",rel:"noopener noreferrer"}},[e._v("SWD-NEEDLE"),t("OutboundLink")],1),e._v(",")]),e._v(" "),t("li",[e._v("JST-GH 4 cable.")])]),e._v(" "),t("p",[e._v("An example of a connection is shown below.")]),e._v(" "),t("p",[t("img",{attrs:{src:r(279),alt:"connection-prog.png",title:"connection-prog.png"}})]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("SWD and CAN sockets look similar and they use the same 4-pin cable. SWD has 3.3V, but CAN has 5V. Don't mix them up.")])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("On the RL programmer "),t("code",[e._v("VUSB")]),e._v(" led should be orange, "),t("code",[e._v("3.3")]),e._v(" led should be red, "),t("code",[e._v("ST-link")]),e._v(" led should be blue, and "),t("code",[e._v("blink")]),e._v(" led should blink with yellow. If they are not, probably you are making something wrong. It also may indicate that the board works incorrectly.")])]),e._v(" "),t("h3",{attrs:{id:"step-2-3-upload-the-firmware"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-2-3-upload-the-firmware"}},[e._v("#")]),e._v(" Step 2.3. Upload the firmware")]),e._v(" "),t("p",[e._v("It is expected to use "),t("a",{attrs:{href:"https://www.st.com/en/development-tools/stm32cubeprog.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("STM32CubeProgrammer"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Open "),t("code",[e._v("STM32CubeProgrammer")]),e._v(".")])]),e._v(" "),t("li",[t("p",[e._v("Connect the programmer to the PC via USB and target device to the programmer via SWD connectors as shown on the "),t("code",[e._v("Step 3. Connect the programmer")]),e._v(".")])]),e._v(" "),t("li",[t("p",[e._v("Press "),t("code",[e._v("Connect")]),e._v(" button, you will see corresponding "),t("code",[e._v("Target information")]),e._v(".")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("Error: No debug probe detected")]),e._v(". The programmer is not detected by your PC.")])]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("Error: No STM32 target found!")]),e._v(". The programmer is detected, but the node is not connected to programmer. It may refer to bad SWD connection between needles and the node. Try to slightly push the needles or change the connection angle.")])]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("Error: Unable to list supported devices. Can't identify the device!")]),e._v(". This error was reported once. It was gone after reinstalling the STM32CubeProgrammer software from custom to the default directory.")])]),e._v(" "),t("p",[e._v("If everything is fine, you will see the following:")]),e._v(" "),t("img",{attrs:{src:r(520),alt:"drawing",width:"512"}})]),e._v(" "),t("li",[t("p",[e._v("Press "),t("code",[e._v("Open file")]),e._v(" and choose firmware binary to be downloaded on chip. It should be the firmware binary that your downloaded in "),t("code",[e._v("Step 1. Download firmware")])]),e._v(" "),t("img",{attrs:{src:r(521),alt:"drawing"}})]),e._v(" "),t("li",[t("p",[e._v("Press "),t("code",[e._v("Download")])]),e._v(" "),t("img",{attrs:{src:r(522),alt:"drawing",width:"512"}})]),e._v(" "),t("li",[t("p",[e._v("Reconnect the node")])])]),e._v(" "),t("p",[e._v("At that point, the firmware is succesfully downloaded. You can verify the software version by using "),t("code",[e._v("gui_tool")]),e._v(".")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("Its also possible to upload firmware using "),t("code",[e._v("STM32_Programmer_CLI.exe")])]),e._v(" "),t("p",[t("code",[e._v('STM32_Programmer_CLI.exe -c port=SWD -d "<PATH_TO_FIRMWARE>\\cyphal_example.bin" 0x08000000')])])])])}),[],!1,null,null,null);t.default=a.exports}}]);