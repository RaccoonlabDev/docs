(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{274:function(t,e,_){t.exports=_.p+"assets/img/node.2aa05057.png"},542:function(t,e,_){t.exports=_.p+"assets/img/schematic.fa16eb7e.png"},543:function(t,e,_){t.exports=_.p+"assets/img/wire.3f3c2513.png"},544:function(t,e,_){t.exports=_.p+"assets/img/battery_info.658599f6.png"},545:function(t,e,_){t.exports=_.p+"assets/img/battery_status.518776a2.png"},773:function(t,e,_){"use strict";_.r(e);var v=_(14),a=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"dronecan-bms-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dronecan-bms-node"}},[t._v("#")]),t._v(" DroneCAN BMS node")]),t._v(" "),e("p",[t._v("BMS node reads data from "),e("a",{attrs:{href:"https://faktor.de/out/media/BMS_16i_v5_4_TG.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("BMS 16i"),e("OutboundLink")],1),t._v(" and sends it as DroneCAN message.")]),t._v(" "),e("img",{attrs:{src:_(274),alt:"drawing",width:"256"}}),t._v(" "),e("h3",{attrs:{id:"_1-hardware-specification"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-hardware-specification"}},[t._v("#")]),t._v(" 1. Hardware specification")]),t._v(" "),e("p",[e("img",{attrs:{src:_(542),alt:"schematic",title:"schematic"}})]),t._v(" "),e("h3",{attrs:{id:"_2-wire"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-wire"}},[t._v("#")]),t._v(" 2. Wire")]),t._v(" "),e("p",[t._v("The node has several connectors which are described in the table below.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("№")]),t._v(" "),e("th",[t._v("Connector")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("CAN1A, CAN1B (UCANPHY Micro or JST-GH 4)")]),t._v(" "),e("td",[t._v("This CAN socket is used for communication with DroneCAN/Cyphal network. The baudrate is 1000000.")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("CAN2A, CAN2B (UCANPHY Micro or JST-GH 4)")]),t._v(" "),e("td",[t._v("This CAN socket is used for reading data from BMS. The baudrate is 250000.")])]),t._v(" "),e("tr",[e("td",[t._v("3")]),t._v(" "),e("td",[t._v("SWD")]),t._v(" "),e("td",[t._v("STM32 firmware updating using "),e("RouterLink",{attrs:{to:"/guide/pmu/programmer_sniffer/programmer.html"}},[t._v("programmer-sniffer")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("USB")]),t._v(" "),e("td",[t._v("Do not use it.")])])])]),t._v(" "),e("p",[t._v("BMS 16i is powered directly from the monitored battery and works independently.")]),t._v(" "),e("p",[t._v("Example of connection is shown below.")]),t._v(" "),e("p",[e("img",{attrs:{src:_(543),alt:"wire",title:"wire"}})]),t._v(" "),e("h3",{attrs:{id:"_3-main-function-description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-main-function-description"}},[t._v("#")]),t._v(" 3. Main function description")]),t._v(" "),e("p",[t._v("The node converts CAN frames from the BMS 16i in his format on the "),e("code",[t._v("CAN2 socket")]),t._v(" and sends DroneCAN BatteryInfo on the "),e("code",[t._v("CAN1 socket")]),t._v(".")]),t._v(" "),e("p",[t._v("The node reads 3 CAN frames from the BMS (package0, package1 and package2).")]),t._v(" "),e("p",[t._v("The reading data are:")]),t._v(" "),e("ul",[e("li",[t._v("total voltage,")]),t._v(" "),e("li",[t._v("total current,")]),t._v(" "),e("li",[t._v("temperature,")]),t._v(" "),e("li",[t._v("3 flags: bms error, is used and overheat.")])]),t._v(" "),e("p",[t._v("The node also estimates an average power and charging level in percents.")]),t._v(" "),e("p",[t._v("The result publish rate is 3 Hz. More specifically, the node sends message when it received something from the BMS. If there is no data, the node will send nothing.")]),t._v(" "),e("p",[e("strong",[t._v("3.1 Charging level")])]),t._v(" "),e("p",[t._v("There are 2 option how to fill the charging level.")]),t._v(" "),e("p",[t._v("If "),e("code",[t._v("bms_estimate_percent")]),t._v(" is disabled (= 0), the node parses this value from the BMS directly.")]),t._v(" "),e("p",[t._v("If "),e("code",[t._v("bms_estimate_percent")]),t._v(" is enabled (= 1), the node linearly estimates this value himself. You should specify the following parameters:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("bms_cell_num")]),t._v(",")]),t._v(" "),e("li",[e("code",[t._v("bms_cell_min_voltage_mv")]),t._v(",")]),t._v(" "),e("li",[e("code",[t._v("bms_cell_max_voltage_mv")]),t._v(",")])]),t._v(" "),e("p",[t._v("If total voltage is less than "),e("code",[t._v("bms_cell_num")]),t._v(" * "),e("code",[t._v("bms_cell_min_voltage_mv")]),t._v(", the charging level will be 0%.")]),t._v(" "),e("p",[t._v("If total voltage is more than "),e("code",[t._v("bms_cell_num")]),t._v(" * "),e("code",[t._v("bms_cell_max_voltage_mv")]),t._v(", the charging level will be 100%.")]),t._v(" "),e("p",[t._v("Otherwise the charging level will be linearly estimated between 0 and 100%.")]),t._v(" "),e("h3",{attrs:{id:"_4-led-indication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-led-indication"}},[t._v("#")]),t._v(" 4. Led indication")]),t._v(" "),e("p",[t._v("This board has an internal led that may allow you to understand possible problems. It blinks from 1 to 10 times within 4 seconds. By counting the number of blinks you can define the code of current status.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Number of blinks")]),t._v(" "),e("th",[t._v("Color")]),t._v(" "),e("th",[t._v("Health")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("Green")]),t._v(" "),e("td",[t._v("OK")]),t._v(" "),e("td",[t._v("Everything is ok.")])]),t._v(" "),e("tr",[e("td",[t._v("5")]),t._v(" "),e("td",[t._v("RED")]),t._v(" "),e("td",[t._v("ERROR")]),t._v(" "),e("td",[t._v("Either the node receive nothing from BMS for at least 1 second or it receive ERROR status")])]),t._v(" "),e("tr",[e("td",[t._v("6")]),t._v(" "),e("td",[t._v("RED")]),t._v(" "),e("td",[t._v("CRITICAL")]),t._v(" "),e("td",[t._v("There is a problem on the periphery initialization level. Probably you load the wrong firmware.")])])])]),t._v(" "),e("h3",{attrs:{id:"_5-dronecan-interface"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-dronecan-interface"}},[t._v("#")]),t._v(" 5. DroneCAN Interface")]),t._v(" "),e("p",[t._v("Device get info from i2c and publish to CAN.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("№")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Message")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("publisher")]),t._v(" "),e("td",[e("a",{attrs:{href:"https://dronecan.github.io/Specification/7._List_of_standard_data_types/#batteryinfo",target:"_blank",rel:"noopener noreferrer"}},[t._v("uavcan.equipment.power.BatteryInfo"),e("OutboundLink")],1)])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("publisher")]),t._v(" "),e("td",[e("a",{attrs:{href:"https://dronecan.github.io/Specification/7._List_of_standard_data_types/#logmessage",target:"_blank",rel:"noopener noreferrer"}},[t._v("uavcan.protocol.debug.LogMessage"),e("OutboundLink")],1)])])])]),t._v(" "),e("p",[t._v("Besides required and highly recommended functions such as "),e("code",[t._v("NodeStatus")]),t._v(" and "),e("code",[t._v("GetNodeInfo")]),t._v(" this node also supports the following application-level functions:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("№")]),t._v(" "),e("th",[t._v("type")]),t._v(" "),e("th",[t._v("message")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("RPC-service")]),t._v(" "),e("td",[e("a",{attrs:{href:"https://dronecan.github.io/Specification/7._List_of_standard_data_types/#uavcanprotocolparam",target:"_blank",rel:"noopener noreferrer"}},[t._v("uavcan.protocol.param"),e("OutboundLink")],1)])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("RPC-service")]),t._v(" "),e("td",[e("a",{attrs:{href:"https://dronecan.github.io/Specification/7._List_of_standard_data_types/#restartnode",target:"_blank",rel:"noopener noreferrer"}},[t._v("uavcan.protocol.RestartNode"),e("OutboundLink")],1)])]),t._v(" "),e("tr",[e("td",[t._v("3")]),t._v(" "),e("td",[t._v("RPC-service")]),t._v(" "),e("td",[e("a",{attrs:{href:"https://dronecan.github.io/Specification/7._List_of_standard_data_types/#gettransportstats",target:"_blank",rel:"noopener noreferrer"}},[t._v("uavcan.protocol.GetTransportStats"),e("OutboundLink")],1)])])])]),t._v(" "),e("h3",{attrs:{id:"_6-dronecan-parameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-dronecan-parameters"}},[t._v("#")]),t._v(" 6. DroneCAN Parameters")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("№")]),t._v(" "),e("th",[t._v("Parameter name")]),t._v(" "),e("th",[t._v("Parameter Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("id")]),t._v(" "),e("td",[t._v("Integer")]),t._v(" "),e("td",[t._v("Node identifier. Should be unique in the network")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("bms_std_addr")]),t._v(" "),e("td",[t._v("Integer")]),t._v(" "),e("td",[t._v("BMS standard CAN address")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("bms_ext_addr")]),t._v(" "),e("td",[t._v("Integer")]),t._v(" "),e("td",[t._v("BMS extended CAN address")])]),t._v(" "),e("tr",[e("td",[t._v("3")]),t._v(" "),e("td",[t._v("bms_battery_id")]),t._v(" "),e("td",[t._v("Integer")]),t._v(" "),e("td",[t._v("Battery identifier (BatteryInfo message)")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("bms_instance")]),t._v(" "),e("td",[t._v("Integer")]),t._v(" "),e("td",[t._v("Instance (BatteryInfo message)")])]),t._v(" "),e("tr",[e("td",[t._v("5")]),t._v(" "),e("td",[t._v("bms_power_filter_size")]),t._v(" "),e("td",[t._v("Integer")]),t._v(" "),e("td",[t._v("Moving average power estimator filter size")])]),t._v(" "),e("tr",[e("td",[t._v("5")]),t._v(" "),e("td",[t._v("bms_cell_num")]),t._v(" "),e("td",[t._v("Integer")]),t._v(" "),e("td",[t._v("Number of cells. It is used for charging percent estimation.")])]),t._v(" "),e("tr",[e("td",[t._v("6")]),t._v(" "),e("td",[t._v("bms_cell_max_voltage_mv")]),t._v(" "),e("td",[t._v("Integer")]),t._v(" "),e("td",[t._v("Max cell voltage. It is used for charging percent estimation.")])]),t._v(" "),e("tr",[e("td",[t._v("7")]),t._v(" "),e("td",[t._v("bms_cell_min_voltage_mv")]),t._v(" "),e("td",[t._v("Integer")]),t._v(" "),e("td",[t._v("Min cell voltage. It is used for charging percent estimation.")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("bms_estimate_percent")]),t._v(" "),e("td",[t._v("Integer")]),t._v(" "),e("td",[t._v("Enable or disable charging percent estimation.")])]),t._v(" "),e("tr",[e("td",[t._v("9")]),t._v(" "),e("td",[t._v("bms_self_test")]),t._v(" "),e("td",[t._v("Integer")]),t._v(" "),e("td",[t._v("Disable (0) or enable (1) self testing")])]),t._v(" "),e("tr",[e("td",[t._v("10")]),t._v(" "),e("td",[t._v("log_level")]),t._v(" "),e("td",[t._v("Integer")]),t._v(" "),e("td",[t._v("Logging level from 0 (debug) to 3 (critical only)")])]),t._v(" "),e("tr",[e("td",[t._v("11")]),t._v(" "),e("td",[t._v("name")]),t._v(" "),e("td",[t._v("String")]),t._v(" "),e("td",[t._v("Custom node name")])])])]),t._v(" "),e("h4",{attrs:{id:"_6-1-log-level"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-log-level"}},[t._v("#")]),t._v(" 6.1. Log level")]),t._v(" "),e("p",[t._v("According to the "),e("a",{attrs:{href:"https://dronecan.github.io/Specification/7._List_of_standard_data_types/#loglevel",target:"_blank",rel:"noopener noreferrer"}},[t._v("LogLevel"),e("OutboundLink")],1),t._v(" message, we have 4 log levels:")]),t._v(" "),e("ul",[e("li",[t._v("debug")]),t._v(" "),e("li",[t._v("info")]),t._v(" "),e("li",[t._v("warning")]),t._v(" "),e("li",[t._v("errors")])]),t._v(" "),e("p",[e("code",[t._v("log_level")]),t._v(" parameter might have values described in the table below.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param value")]),t._v(" "),e("th",[t._v("DEBUG")]),t._v(" "),e("th",[t._v("INFO")]),t._v(" "),e("th",[t._v("WARNING")]),t._v(" "),e("th",[t._v("ERROR")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("+")]),t._v(" "),e("td",[t._v("+")]),t._v(" "),e("td",[t._v("+")]),t._v(" "),e("td",[t._v("+")]),t._v(" "),e("td",[t._v("Log everything")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("+")]),t._v(" "),e("td",[t._v("+")]),t._v(" "),e("td",[t._v("+")]),t._v(" "),e("td",[t._v("At least INFO level")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("+")]),t._v(" "),e("td",[t._v("+")]),t._v(" "),e("td",[t._v("At least WARNING level")])]),t._v(" "),e("tr",[e("td",[t._v("3")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("+")]),t._v(" "),e("td",[t._v("At least ERROR level")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("Disable logging")])])])]),t._v(" "),e("p",[t._v("0 - log everything, 1 - discard less than info level, 2 - discard less than warn level, 3 -log only errors, 4 - disable logging")]),t._v(" "),e("h4",{attrs:{id:"_6-2-node-name-customization"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-node-name-customization"}},[t._v("#")]),t._v(" 6.2. Node name customization")]),t._v(" "),e("p",[t._v("By default this node has "),e("code",[t._v("Unknown")]),t._v(" name. Change "),e("code",[t._v("name")]),t._v(" parameter value to set the desired name.")]),t._v(" "),e("h3",{attrs:{id:"_7-versions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-versions"}},[t._v("#")]),t._v(" 7. Versions")]),t._v(" "),e("p",[t._v("Here is a list with released stable version of the firmware.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Version")]),t._v(" "),e("th",[t._v("Date")]),t._v(" "),e("th",[t._v("SHA")]),t._v(" "),e("th",[t._v("Link")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("v0.8.12")]),t._v(" "),e("td",[t._v("Oct 02, 2022")]),t._v(" "),e("td",[t._v("e5bdc5c")]),t._v(" "),e("td",[t._v("bms_v0.8.12_e5bdc5c.bin")])]),t._v(" "),e("tr",[e("td",[t._v("v0.8.13")]),t._v(" "),e("td",[t._v("Oct 03, 2022")]),t._v(" "),e("td",[t._v("d39df80")]),t._v(" "),e("td",[t._v("bms_v0.8.13_d39df80.bin")])]),t._v(" "),e("tr",[e("td",[t._v("v0.8.15")]),t._v(" "),e("td",[t._v("Oct 10, 2022")]),t._v(" "),e("td",[t._v("9a4d7f7")]),t._v(" "),e("td",[t._v("bms_v0.8.15_9a4d7f7.bin")])])])]),t._v(" "),e("h3",{attrs:{id:"_8-debug-on-table"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-debug-on-table"}},[t._v("#")]),t._v(" 8. Debug on table")]),t._v(" "),e("p",[t._v("It is recommended to try and configure the device with "),e("code",[t._v("gui_tool")]),t._v(".")]),t._v(" "),e("p",[e("img",{attrs:{src:_(544),alt:"wire",title:"wire"}})]),t._v(" "),e("h3",{attrs:{id:"_9-px4-integration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-px4-integration"}},[t._v("#")]),t._v(" 9. PX4 integration")]),t._v(" "),e("p",[t._v("Enable UAVCAN and set "),e("code",[t._v("UAVCAN_SUB_BAT")]),t._v(" to 1.")]),t._v(" "),e("p",[e("img",{attrs:{src:_(545),alt:"wire",title:"wire"}})]),t._v(" "),e("h3",{attrs:{id:"_10-useful-links"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-useful-links"}},[t._v("#")]),t._v(" 10. Useful links")]),t._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://faktor.de/out/media/BMS_16i_v5_4_TG.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("BMS 16i datasheet v5.4"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=a.exports}}]);